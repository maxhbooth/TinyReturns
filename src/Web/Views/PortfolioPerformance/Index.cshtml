@model Dimensional.TinyReturns.Web.Models.PortfolioPerformanceIndexModel


@{
    ViewBag.Title = "Portfolio Performance";
}

<head>
    <style>
        div.outer {
            position: absolute;
            padding: 20px;
        }

        div.Myporfolios {
            align-content: center;
            overflow: auto;
            padding: 10px;
            height: 30vh;
            width: 70vw;
            border-style: solid;
            border-width: medium;
            border-color: black;
        }

        div.ScollPanel {
            align-content: center;
            overflow: auto;
        }

        div.Edit {
            position: relative;
            text-align: left;
            padding: 10px;
            width: 70vw;
            border-style: solid;
            border-width: medium;
            border-color: black;
        }
        /*

                div.searchbar {
                    position: fixed;
                }


                input[type=text] {
                    background-color: pink;
                }
        */
        #header {
            position: fixed;
        }
    </style>
</head>

<body>
    <br />
    <div class="form-inline">
        @using (Html.BeginForm())
            {
            <div class="form-group">

                @Html.DropDownListFor(x => x.MonthYear, Model.MonthYears, null, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.DropDownListFor(m => m.Selected, Model.NetGrossList, null, new { @class = "form-control" })
            </div>

            <input type="submit" value="Go" class="btn btn-default" />
        }
    </div>

    <div class="outer">
        <br>
        <br>
        <div class="Myporfolios">
            <div id="header"><h2 style="position: relative;">Portfolios</h2></div>
            <div class="ScollPanel">
                <table id="PortfolioTable" class="table table-condensed" style="margin-top: 70px">
                    <thead>
                        <tr>
                            <th scope="col">Number</th>
                            <th scope="col">Name</th>
                            <th scope="col">1 Month</th>
                            <th scope="col">3 Month</th>
                            <th scope="col">6 Month</th>
                            <th scope="col">Quarter to Date</th>
                            <th scope="col">Year to Date</th>
                            <th scope="col">First Full Month</th>
                            <th scope="col">Standard Deviation</th>
                            <th scope="col">Mean</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody style="margin-top: 50px">
                        @{ int index = 0;}
                        @foreach (var portfolio in Model.Portfolios)
                        {
                            index = index + 1;
                            var identity = "pullToEdit" + @portfolio.Number;
                            <tr style="background: lavenderblush">
                                <td>@portfolio.Number</td>
                                <td>@portfolio.Name</td>
                                <td>@portfolio.OneMonth</td>
                                <td>@portfolio.ThreeMonth</td>
                                <td>@portfolio.SixMonth</td>
                                <td>@portfolio.QuarterToDate</td>
                                <td>@portfolio.YearToDate</td>
                                <td>@portfolio.FirstFullMonth</td>
                                <td>@portfolio.StandardDeviation</td>
                                <td>@portfolio.Mean</td>
                                <td class="myClick" id="@identity" value="@portfolio.Name">Edit</td>
                            </tr>

                            foreach (var benchmark in portfolio.Benchmarks)
                            {
                                <tr>
                                    <td></td>
                                    <td style="padding-left: 20px;">@benchmark.Name</td>
                                    <td>@benchmark.OneMonth</td>
                                    <td>@benchmark.ThreeMonth</td>
                                    <td>@benchmark.SixMonth</td>
                                    <td>@benchmark.QuarterToDate</td>
                                    <td>@benchmark.YearToDate</td>
                                    <td>@portfolio.FirstFullMonth</td>
                                </tr>
                            }
                        }

                    </tbody>
                </table>
            </div>
            @*<div class="searchbar">
                    <form>
                        <input type="text" name="search" placeholder="Search..">
                    </form>
                </div>*@
        </div>
        <br>

        <div class="Edit" style="overflow: hidden;">
            <h2>Edit Portfolio</h2>

            <table class="table table-condensed">
                <thead>
                    <tr>
                        <th>Number</th>
                        <th>Name</th>
                        <th>1 Month</th>
                        <th>3 Month</th>
                        <th>6 Month</th>
                        <th>Quarter to Date</th>
                        <th>Year to Date</th>
                        <th>First Full Month</th>
                        <th>Standard Deviation</th>
                        <th>Mean</th>
                    </tr>
                </thead>
                <tbody id="putResult" style="margin-top: 50px">
                    @*script fills this table*@
                </tbody>
            </table>
            <button type="submit" style="float: right; display: none">Save</button>
        </div>
        <p id="changable">Hi there</p>
        <p id="changable2">Hi there</p>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <script>


        var table = document.getElementById('PortfolioTable');

        $('#PortfolioTable').find('tr td:last-child').on('click', $(this).find('td:last-child'), function () {
            table.onclick = function (e) {
                e = e || event;
                var eventEl = e.srcElement || e.target,
                    parent = eventEl.parentNode;
                //pull portfolio and benchmarks to edit panel
                //parent is just the portfolio row HTML between <tr..> and </tr>
                clickedEdit(parent);
                /*if (isPortfolio(parent) && confirm("Do you want to edit this porfolio?")) {
                    //make editable form
                    var row = '<tr style="background: lavenderblush">';
                    for (var i = 0; i < parent.cells.length - 1; i++)
                        row += `<td>${parent.cells[i].innerHTML}</td>`;
                    row += '</tr>';
                    var numRows = table.rows.length;
                    for (var slot = parent.rowIndex + 1; slot < numRows; slot++)
                        if (!isPortfolio(table.rows[slot])) {
                            var bench = '<tr>';
                            for (var i = 0; i < table.rows[slot].cells.length; i++)
                                bench += '<td>' + table.rows[slot].cells[i].innerHTML + '</td>';
                            bench += '</tr>';
                            row += bench;
                        } else {
                            break;
                        }

                    loadEdit(row);
                    /*$('#putResult').after(row);
                    $(function () {
                        $('.myClick').css('pointer-events', 'none');
                    });
                    $('.myClick').text('');
                    $('button').css('display', 'initial');
                    $('.form-inline').css('display', 'none');#1#

                } else {
                    throw "This should not be editable on its own.";
                }*/
            }

        });


        function clickedEdit(parent) {
            if (isPortfolio(parent) && confirm("Do you want to edit this porfolio?")) {
                makeOld(parent);

                //make editable form
                var row = '<tr style="background: lavenderblush">';
                for (var i = 0; i < parent.cells.length - 1; i++)
                    row += `<td>${parent.cells[i].innerHTML}</td>`;
                row += '</tr>';
                //make Number and Name editable forms
                row = makeNumberEditable(row);
                row = makeNameEditable(row);

                var numRows = table.rows.length;

                for (var slot = parent.rowIndex + 1; slot < numRows; slot++) {  //benchmark is in the slot'th row
                    if (!isPortfolio(table.rows[slot])) {
                        var bench = '<tr>';
                        for (var j = 0; j < table.rows[slot].cells.length; j++)     //j is the column
                            bench += '<td>' + table.rows[slot].cells[j].innerHTML + '</td>';
                        bench += '</tr>';
                        bench = makeBenchmarkEditable(bench, slot - parent.rowIndex);
                        row += bench;
                    } else {
                        //stop looking for benchmarks when find another portfolio
                        break;
                    }
                }
                loadEdit(row);

            } else {
                throw "This should not be editable on its own.";
            }
        }

        function makeNumberEditable(row) {
            //find first and second <td>
            var firstStart = row.search("<td>");
            var firstEnd = row.search("</td>");
            var beginString = row.substr(0, firstStart + 4);
            var endString = row.substring(firstEnd, row.length);
            var number = row.substring(firstStart + 4, firstEnd);
            var newNumber = '<input type="text" name = "number" value = "' + number + '">';

            var newRow = beginString + newNumber + endString;
            return newRow;
        }

        function makeNameEditable(row) {
            var startPosition = getPosition(row, "<td>", 2);
            var endPosition = getPosition(row, "</td>", 2);
            var beginString = row.substr(0, startPosition + 4);
            var endString = row.substring(endPosition, row.length);
            var name = row.substring(startPosition + 4, endPosition);
            var newName = '<input type="text" name = "name" value = "' + name + '">';

            var newRow = beginString + newName + endString;
            return newRow;
        }

        function makeBenchmarkEditable(benchRow, b) {
            //no number in first column
            var benchNameStart = getPosition(benchRow, "<td>", 2);
            var benchNameEnd = getPosition(benchRow, "</td>", 2);
            var benchBegin = benchRow.substring(0, benchNameStart + 4);
            var benchEnd = benchRow.substring(benchNameEnd, benchRow.length);

            var benchName = benchRow.substring(benchNameStart + 4, benchNameEnd);
            var newBenchName = '<input type="text" name = "benchmark' + b + '" value = "' + benchName + '">';

            var newBenchRow = benchBegin + newBenchName + benchEnd;
            return newBenchRow;
        }

        function getPosition(string, subString, index) {
            return string.split(subString, index).join(subString).length;
        }

        function makeOld(parent) {
            var rowElement = document.getElementById("PortfolioTable").rows[parent.rowIndex];
            //have to override something
            rowElement.removeAttribute('style');
            rowElement.style.background = '#ffa4c2';
            //benchmarks
            var numRows = table.rows.length;
            for (var slot = parent.rowIndex + 1; slot < numRows; slot++) {  //benchmark is in the slot'th row
                if (!isPortfolio(table.rows[slot])) {
                    var diff = (table.rows[parent.rowIndex].cells.length - table.rows[slot].cells.length);
                    //make sure  correct number of cells
                    if (diff > 0) {
                        for (let k = 0; k < diff; k++) {
                            $("#changable").text(table.rows[slot]);
                            table.rows[slot].insertCell(-1);
                        }
                        $("#changable2").text(table.rows[slot].cells);
                    }
                    table.rows[slot].style.background = '#ffa4c2';

                } else {
                    //stop looking for benchmarks when find another portfolio
                    break;
                }
            }


        }



        function loadEdit(row) {
            $('#putResult').after(row);
            $(function () {
                $('.myClick').css('pointer-events', 'none');
            });
            $('.myClick').text('');
            $('button').css('display', 'initial');
            $('.form-inline').css('display', 'none');
        }

        $(function () {
            $('td').css('pointer-events', 'none');
        });
        $(function () {
            $('.myClick').css('pointer-events', 'auto');
        });

        function isPortfolio(element) {
            return (element.cells[0].innerHTML != '');
        }

    </script>
</body>
